from ROOT import *
#from MC_QCDTF_allyear import *
#from QCDTFr_split_values import *
#from QCDTFr_split_values_2 import *
#from QCDTF_inclerror import *
#from QCDTF_inclerror_v2 import *

#from QCDTF_inclerror_corrected_v2 import *
#from QCDTF_inclerror_corrected_lukas import *

#from QCDTF_inclerror_corrected_lukas_full import *
#from  Final_NotSmeared import *
#from Final_NotSmeared_comparelukas2 import *

#from Final_NotSmeared_comparelukas2_nohem2018 import *
#from Final_NotSmeared_triggerfix_HEMapplied import *

#from final_MCQCDTF_notsmeared_HEMveto_dec2020 import *
#from HEPHY_compare_notsmear_final_dec import *
from array import array


gROOT.SetBatch(True)
c1 = TCanvas("c1"," ",200,10,700,500)
#c1 = TCanvas("c1"," ",200,10,350,250)

#c1.cd()
p1 = TPad("p1","p1",0.,0.3,1.,1.)  
p1.Draw()
p1.SetBottomMargin(0.001)
#c1.cd()
p2=TPad("p2","p3",0.,0.,1.,0.3)
p2.Draw()
p2.SetTopMargin(0.001)
p2.SetBottomMargin(0.3)

from Jan_18_2021 import *

n=3
x=array('d')
x.append(2)
x.append(3)
x.append(4)
ex=array('d')
ex.append(0)
ex.append(0)
ex.append(0)
years=["2016","2017","2018"]
chans=["Ele","Mu"]

y1=array('d')
y2=array('d')
y3=array('d')
y4=array('d')
y5=array('d')
y6=array('d')
y10=array('d')
y20=array('d')
y30=array('d')
y40=array('d')
y50=array('d')
y60=array('d')
ey1=array('d')
ey2=array('d')
ey3=array('d')
ey4=array('d')
ey5=array('d')
ey6=array('d')
ey10=array('d')
ey20=array('d')
ey30=array('d')
ey40=array('d')
ey50=array('d')
ey60=array('d')
for year in years:
	for chan in chans:
		if chan=="Ele" and year=="2016":
			y1.append(QCDTF21Ele2016)
			y1.append(QCDTF31Ele2016)
			y1.append(QCDTF41Ele2016)
			ey1.append(QCDTFError21Ele2016)
			ey1.append(QCDTFError31Ele2016)
			ey1.append(QCDTFError41Ele2016)
			y10.append(QCDTF21Ele2016_lukas)
			y10.append(QCDTF31Ele2016_lukas)
			y10.append(QCDTF41Ele2016_lukas)
			ey10.append(0)
			ey10.append(0)
			ey10.append(0)
			gr10 = TGraphErrors(n, x, y10,ex,ey10)
			gr10.SetMarkerColor(2)
			gr10.SetMarkerStyle(9)
			gr1 = TGraphErrors(n, x, y1,ex,ey1)
			gr1.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr1.SetMarkerColor(4)
			gr1.SetMarkerStyle(21)
			gr1.SetMinimum(0)
			gr1.SetMaximum(1.8)
			axis1=gr1.GetXaxis()
			axis1.SetTitle("NJets")
			axis11=gr1.GetYaxis()
			axis11.SetTitleSize(0.05)
			axis11.SetLabelSize(0.05)
			axis11.SetTitle("QCD transfer factor")
			gr10.SetLineColor(2)
			gr1.SetLineColor(4)
			p1.cd()
			gr1.Draw("AP")
			gr10.Draw("P")
			leg1 = TLegend(0.1,0.7,0.48,0.9)
   			leg1.AddEntry(gr1,"LPC","lep");
   			leg1.AddEntry(gr10,"HEPHY","lp");
   			leg1.Draw()
                        #ratio
   			p2.cd()
			r1 =TGraph(n) 
			r1.SetTitle("")
   			for i in range(0,n) :
				 r1.SetPoint(i, x[i], y10[i]/y1[i])
      			r1.GetXaxis().SetTitleSize(0.1)
      			r1.GetXaxis().SetLabelSize(0.1)
      			r1.GetYaxis().SetLabelSize(0.1)
      			r1.GetXaxis().SetTitle("NJets")
 			#r1.SetMinimum(0.5)
			#r1.SetMaximum(1.5)
   			r1.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
		if chan=="Mu" and year=="2016":
			y2.append(QCDTF21Mu2016)
			y2.append(QCDTF31Mu2016)
			y2.append(QCDTF41Mu2016)
			ey2.append(QCDTFError21Mu2016)
			ey2.append(QCDTFError31Mu2016)
			ey2.append(QCDTFError41Mu2016)
			y20.append(QCDTF21Mu2016_lukas)
			y20.append(QCDTF31Mu2016_lukas)
			y20.append(QCDTF41Mu2016_lukas)
			ey20.append(0)
			ey20.append(0)
			ey20.append(0)
			gr20 = TGraphErrors(n, x, y20,ex,ey20)
			gr20.SetMarkerColor(2)
			gr20.SetMarkerStyle(9)
			gr2 = TGraphErrors(n, x, y2, ex, ey2)
			gr2.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr2.SetMarkerColor(4)
			gr2.SetMarkerStyle(21)
			gr2.SetMinimum(0)
			gr2.SetMaximum(3.7)
			axis2=gr2.GetXaxis()
			axis2.SetTitle("NJets")
			axis12=gr2.GetYaxis()
			axis12.SetTitleSize(0.05)
			axis12.SetLabelSize(0.05)
			axis12.SetTitle("QCD transfer factor")
			gr20.SetLineColor(2)
			gr2.SetLineColor(4)
                        p1.cd()
			gr2.Draw("AP")
			gr20.Draw("P")
			leg2 = TLegend(0.1,0.7,0.48,0.9)
   			leg2.AddEntry(gr2,"LPC","lep");
   			leg2.AddEntry(gr20,"HEPHY","lp");
   			leg2.Draw()
                        #ratio
   			p2.cd()
			r2 =TGraph(n) 
			r2.SetTitle("")
   			for i in range(0,n) :
				 r2.SetPoint(i, x[i], y20[i]/y2[i])
      			r2.GetXaxis().SetTitleSize(0.1)
      			r2.GetXaxis().SetLabelSize(0.1)
      			r2.GetYaxis().SetLabelSize(0.1)
      			r2.GetXaxis().SetTitle("NJets")
 			#r2.SetMinimum(0.5)
			#r2.SetMaximum(1.5)
   			r2.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
		if chan=="Ele" and year=="2017":
			y3.append(QCDTF21Ele2017)
			y3.append(QCDTF31Ele2017)
			y3.append(QCDTF41Ele2017)
			ey3.append(QCDTFError21Ele2017)
			ey3.append(QCDTFError31Ele2017)
			ey3.append(QCDTFError41Ele2017)
			y30.append(QCDTF21Ele2017_lukas)
			y30.append(QCDTF31Ele2017_lukas)
			y30.append(QCDTF41Ele2017_lukas)
			ey30.append(0)
			ey30.append(0)
			ey30.append(0)
			gr30 = TGraphErrors(n, x, y30,ex,ey30)
			gr30.SetMarkerColor(2)
			gr30.SetMarkerStyle(9)
			gr3 = TGraphErrors(n, x, y3, ex, ey3)
			gr3.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr3.SetMarkerColor(4)
			gr3.SetMarkerStyle(21)
			gr3.SetMinimum(0)
			gr3.SetMaximum(2)
			axis3=gr3.GetXaxis()
			axis3.SetTitle("NJets")
			axis13=gr3.GetYaxis()
			axis13.SetTitleSize(0.05)
			axis13.SetLabelSize(0.05)
			axis13.SetTitle("QCD transfer factor")
			gr30.SetLineColor(2)
			gr3.SetLineColor(4)
                        p1.cd()
			gr3.Draw("AP")
			gr30.Draw("P")
			leg3 = TLegend(0.1,0.7,0.48,0.9)
   			leg3.AddEntry(gr3,"LPC","lep");
   			leg3.AddEntry(gr30,"HEPHY","lp");
   			leg3.Draw()
                        #ratio
   			p2.cd()
			r3 =TGraph(n) 
			r3.SetTitle("")
   			for i in range(0,n) :
				 r3.SetPoint(i, x[i], y30[i]/y3[i])
      			r3.GetXaxis().SetTitleSize(0.1)
      			r3.GetXaxis().SetLabelSize(0.1)
      			r3.GetYaxis().SetLabelSize(0.1)
      			r3.GetXaxis().SetTitle("NJets")
 			#r3.SetMinimum(0.5)
			#r3.SetMaximum(1.5)
   			r3.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
		if chan=="Mu" and year=="2017":
			y4.append(QCDTF21Mu2017)
			y4.append(QCDTF31Mu2017)
			y4.append(QCDTF41Mu2017)
			ey4.append(QCDTFError21Mu2017)
			ey4.append(QCDTFError31Mu2017)
			ey4.append(QCDTFError41Mu2017)
			y40.append(QCDTF21Mu2017_lukas)
			y40.append(QCDTF31Mu2017_lukas)
			y40.append(QCDTF41Mu2017_lukas)
			ey40.append(0)
			ey40.append(0)
			ey40.append(0)
			gr40 = TGraphErrors(n, x, y40,ex,ey40)
			gr40.SetMarkerColor(2)
			gr40.SetMarkerStyle(9)
			gr4 = TGraphErrors(n, x, y4, ex, ey4)
			gr4.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr4.SetMarkerColor(4)
			gr4.SetMarkerStyle(21)
			gr4.SetMinimum(0)
			gr4.SetMaximum(5)
			axis4=gr4.GetXaxis()
			axis4.SetTitle("NJets")
			axis14=gr4.GetYaxis()
			axis14.SetTitleSize(0.05)
			axis14.SetLabelSize(0.05)
			axis14.SetTitle("QCD transfer factor")
			gr40.SetLineColor(2)
			gr4.SetLineColor(4)
                        p1.cd()
			gr4.Draw("AP")
			gr40.Draw("P")
			leg4 = TLegend(0.1,0.7,0.48,0.9)
   			leg4.AddEntry(gr4,"LPC","lep");
   			leg4.AddEntry(gr40,"HEPHY","lp");
   			leg4.Draw()
                        #ratio
   			p2.cd()
			r4 =TGraph(n) 
			r4.SetTitle("")
   			for i in range(0,n) :
				 r4.SetPoint(i, x[i], y40[i]/y4[i])
      			r4.GetXaxis().SetTitleSize(0.1)
      			r4.GetXaxis().SetLabelSize(0.1)
      			r4.GetYaxis().SetLabelSize(0.1)
      			r4.GetXaxis().SetTitle("NJets")
 			#r4.SetMinimum(0.5)
			#r4.SetMaximum(1.5)
   			r4.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
		if chan=="Ele" and year=="2018":
			y5.append(QCDTF21Ele2018)
			y5.append(QCDTF31Ele2018)
			y5.append(QCDTF41Ele2018)
			ey5.append(QCDTFError21Ele2018)
			ey5.append(QCDTFError31Ele2018)
			ey5.append(QCDTFError41Ele2018)
			y50.append(QCDTF21Ele2018_lukas)
			y50.append(QCDTF31Ele2018_lukas)
			y50.append(QCDTF41Ele2018_lukas)
			ey50.append(0)
			ey50.append(0)
			ey50.append(0)
			gr50 = TGraphErrors(n, x, y50,ex,ey50)
			gr50.SetMarkerColor(2)
			gr50.SetMarkerStyle(9)
			gr5 = TGraphErrors(n, x, y5, ex, ey5)
			gr5.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr5.SetMarkerColor(4)
			gr5.SetMarkerStyle(21)
			gr5.SetMinimum(0)
			gr5.SetMaximum(1.2)
			axis5=gr5.GetXaxis()
			axis5.SetTitle("NJets")
			axis15=gr5.GetYaxis()
			axis15.SetTitleSize(0.05)
			axis15.SetLabelSize(0.05)
			axis15.SetTitle("QCD transfer factor")
			gr50.SetLineColor(2)
			gr5.SetLineColor(4)
                        p1.cd()
			gr5.Draw("AP")
			gr50.Draw("P")
			leg5 = TLegend(0.1,0.7,0.48,0.9)
   			leg5.AddEntry(gr5,"LPC","lep");
   			leg5.AddEntry(gr50,"HEPHY","lp");
   			leg5.Draw()
                        #ratio
   			p2.cd()
			r5 =TGraph(n) 
			r5.SetTitle("")
   			for i in range(0,n) :
				 r5.SetPoint(i, x[i], y50[i]/y5[i])
      			r5.GetXaxis().SetTitleSize(0.1)
      			r5.GetXaxis().SetLabelSize(0.1)
      			r5.GetYaxis().SetLabelSize(0.1)
      			r5.GetXaxis().SetTitle("NJets")
 			#r5.SetMinimum(0.5)
			#r5.SetMaximum(1.5)
   			r5.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
		if chan=="Mu" and year=="2018":
			y6.append(QCDTF21Mu2018)
			y6.append(QCDTF31Mu2018)
			y6.append(QCDTF41Mu2018)
			ey6.append(QCDTFError21Mu2018)
			ey6.append(QCDTFError31Mu2018)
			ey6.append(QCDTFError41Mu2018)
			y60.append(QCDTF21Mu2018_lukas)
			y60.append(QCDTF31Mu2018_lukas)
			y60.append(QCDTF41Mu2018_lukas)
			ey60.append(0)
			ey60.append(0)
			ey60.append(0)
			gr60 = TGraphErrors(n, x, y60,ex,ey60)
			gr60.SetMarkerColor(2)
			gr60.SetMarkerStyle(9)
			gr6 = TGraphErrors(n, x, y6,ex, ey6)
			gr6.SetTitle("%s%s_QCDTF_in nJet"%(year,chan))
			gr6.SetMarkerColor(4)
			gr6.SetMarkerStyle(21)
			gr6.SetMinimum(0)
			gr6.SetMaximum(4.5)
			axis6=gr6.GetHistogram().GetXaxis()
			axis6.SetTitle("NJets")
			axis16=gr6.GetHistogram().GetYaxis()
			axis16.SetTitleSize(0.05)
			axis16.SetLabelSize(0.05)
			axis16.SetTitle("QCD transfer factor")
			gr60.SetLineColor(2)
			gr6.SetLineColor(4)
                        #gr6.GetHistogram().GetXaxis().SetBinLabel(1,"2jet")
                        #gr6.GetHistogram().GetXaxis().SetBinLabel(2,"3jet")
                        #gr6.GetHistogram().GetXaxis().SetBinLabel(3,">=4jet")
			p1.cd()
			gr6.Draw("AP")
			gr60.Draw("P")
			leg6 = TLegend(0.1,0.7,0.48,0.9)
   			leg6.AddEntry(gr6,"LPC","lep");
   			leg6.AddEntry(gr60,"HEPHY","lp");
   			leg6.Draw()
                        #ratio
   			p2.cd()
   			#r6 = gr60.GetHistogram()
			#r6.Divide(gr6.GetHistogram())
			#r6.SetTitle("")
      			#r6.GetXaxis().SetTitleSize(0.1)
      			#r6.GetXaxis().SetLabelSize(0.1)
      			#r6.GetYaxis().SetLabelSize(0.1)
      			#r6.GetXaxis().SetTitle("NJets")
   			#r6.Draw("hist")
			r6 =TGraph(n) 
			r6.SetTitle("")
   			for i in range(0,n) :
				 r6.SetPoint(i, x[i], y60[i]/y6[i])
      			r6.GetXaxis().SetTitleSize(0.1)
      			r6.GetXaxis().SetLabelSize(0.1)
      			r6.GetYaxis().SetLabelSize(0.1)
      			r6.GetXaxis().SetTitle("NJets")
 			#r6.SetMinimum(0.5)
			#r6.SetMaximum(1.5)
   			r6.Draw("AL")
                	c1.Update()
			c1.SaveAs("%s%s_QCDTF_in_nJetr_incl_dec2020_notsmeared_isHEMVeto_final_lukas_compare_jan18_v1.png"%(year,chan))
